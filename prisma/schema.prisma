// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Parent {
  id        Int     @id @default(autoincrement())
  name      String
  phone     String  @unique
  role      String  // 'mother' | 'father'
  childrenAsMother  Child[] @relation("MotherRelation")
  childrenAsFather  Child[] @relation("FatherRelation")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([phone])
}

model Guardian {
  id           Int      @id @default(autoincrement())
  name         String
  phone        String   @unique
  relationship String   
  children     Child[]  @relation("GuardianRelation")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([phone])
}

model Child {
  id         Int         @id @default(autoincrement())
  name       String
  motherId   Int?    
  fatherId   Int?    
  guardianId Int?    
  birthday   DateTime
  grade      String  
  mother     Parent?     @relation("MotherRelation", fields: [motherId], references: [id])
  father     Parent?     @relation("FatherRelation", fields: [fatherId], references: [id])
  guardian   Guardian?   @relation("GuardianRelation", fields: [guardianId], references: [id])
  attendances Attendance[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([motherId])
  @@index([fatherId])
  @@index([guardianId])
}

model Attendance {
  id          Int      @id @default(autoincrement())
  childId     Int
  date        DateTime @default(now())
  checkedInBy String   // Name of person who checked in the child
  relationship String?  // Role (mother/father) or relationship for guardian
  child       Child    @relation(fields: [childId], references: [id], onDelete: Cascade)
  service     String   // 1st service, 2nd service, or evening service

  @@index([date, service])
  @@index([date])
  @@index([childId])
}